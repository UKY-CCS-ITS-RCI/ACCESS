Use Case: NVHPC (NVIDIA HPC SDK) can be ideal for developing, analyzing, and profiling High Performance Computing (HPC) software in Fortran, C, and C++. It may be used to compile, debug and optimize HPC applications.

Code details and examples: Code.
To use NVHPC, you need a source code in a supported language such as C, C++, or FORTRAN.

FORTRAN Example:
Consider a FORTRAN program named `hello.f90` with the following content.

```
program hello
    print*, 'Hello, World!'
end program hello
```

To compile a FORTRAN program using the NVIDIA nvfortran compiler:

```bash
nvfortran -o hello hello.f90
```
The above command will create an executable "hello" from the hello.f90 source file.

Then, to execute the hello program, use the command:

```bash
./hello
```
C++ Example:
Let’s have a C++ source file named `hello.cpp` with the following contents.

```c++
#include <iostream>
using namespace std;
int main() 
{
    cout << "Hello, World!";
    return 0;
}
```

To compile this C++ program using the NVIDIA nvc++ compiler:

```bash
nvc++ -o hello hello.cpp
```
This command will create an executable named "hello" from hello.cpp source file.

To execute the hello program, use the command:

```bash
./hello
```

C Example:
Let’s have a C source file named `hello.c` with the following contents.

```c
#include<stdio.h>
int main()
{
   printf("Hello, World!");
   return 0;
}
```

To compile this C program using the NVIDIA nvc compiler:

```bash
nvc -o hello hello.c
```
This command will create an executable named "hello" from hello.c source file.

To execute the hello program, use the command:

```bash
./hello
```