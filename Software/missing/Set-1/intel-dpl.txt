{
"Software Name": "Intel(R) oneAPI Data Parallel C++ Library (oneDPL)",
"Overview": "Intel® oneAPI DPC++ Library (Intel ® oneDPL) is a powerful C++ library that provides a convenient and efficient programming model. This high-performance library helps programmers exploit parallelism in their applications and take full advantage of heterogeneous architectures.", 
"Core Features": [
    {
    "Feature 1": "Parallel algorithms for productive heterogeneous computing",
    "Feature 2": "Parallel function objects for high performance computing",
    "Feature 3": "Range API for simple and efficient work sharing",
    "Feature 4": "Iterators and accessor classes for data management on heterogeneous architectures",
    "Feature 5": "Random number distributions for productive and efficient statistics applications"
    }
],
"General Tags": ["Parallel Computing", "Heterogeneous Computing", "High-Performance Computing", "C++ Library"],
"Additional Web URLs": {
    "Software Page": "https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpl.html",
    "Documentation": "https://software.intel.com/content/www/us/en/develop/documentation/onetbb-documentation/top.html",
    "Tutorial Materials": "https://software.intel.com/content/www/us/en/develop/documentation/get-started-dpcpp/top.html"
},

"Example Usage": {
    "Sample Input File": "Not Applicable",
    "Code Snippet": "Use Case: Using oneDPL for parallel sort algorithm; Code: #include <oneapi/dpl/algorithm>. int main() { std::vector<int> v = { 1, 2, 3, 4, 5 }; std::sort(oneapi::dpl::execution::par, v.begin(), v.end())}",
    "Command to Run": "dpcpp file.cpp"};
    "Specifications": "oneDPL works with DPC++/C++ compilers"
},

"Tags": {
    "Research Discipline": "Computer Science",
    "Research Area": "Parallel and Distributed Systems",
    "Software Class": "Library",
    "Software Type": "High-Performance Computing",
    "Field of Science": "Computer and Information Sciences"
    }
}